Intentar poseer conocimiento, intentar controlar si la gente se le
permite usarlo, o intentar detener a otros de compartirlo, es sabotaje.
%
La Libertad 0 es la libertad para ejecutar el programa como tu quieras.
%
La Libertad 1 es la libertad para estudiar el código fuente del programa
y luego modificarlo para hacer que el programa haga lo que tú deseas.
%
La Libertad 2 es la libertad de redistribuir copias exactas cuando lo
desees. Es una libertad para ayudar al prójimo.
%
Libertad 3 es la libertad para redistribuir copias de tus versiones
modificadas cuando lo desees. Esta es la liberta para contribuir a tu
comunidad.
%
El Derecho de Autor no era un problema cuando sólo restringía a las
editoriales, pero ahora se ha convertido en una excusa para atacar al
público.
%
Existe un fuerte Movimiento por el Software Libre en muchos países
latinoamericanos, en India, y en algunas partes de Europa.
%
La gente en los Movimientos Sociales y Ambientales han comprendido los
roles que el Software Libre y el Copyleft juegan en un futuro
igualitario.
%
El software privativo implica colonización digital. Como cualquier
sistema colonial, mantiene a la gente dividida e indefensa: dividida,
porque tienen prohibido compartir copias, e indefensa, porque no tienen
el código fuente, por lo que no pueden cambiarlo, ni siquiera comprobar
qué es realmente. haciendo.
%
Utilizando software de Micro$oft y Appl€, muchas personas han permitido
a esas empresas controlar lo que hacen sus computadoras.
%
Window$ tiene no menos de dos puertas traseras. Una de ellas permite a
la policía utilizar una memoria USB para tomar el control de cualquier
máquina con Window$ y ver datos cifrados.
%
Las características maliciosas son frecuentes en el software propietario
porque el desarrollador o propietario tiene el control total. Este poder
tienta al desarrollador a hacer cosas maliciosas a los usuarios.
%
El software privativo puede complacerlo cumpliendo algunos de sus deseos
informáticos, pero su primera lealtad será siempre hacia el
desarrollador.
%
GPLv3 es leal a la comunidad.
%
Brasil vio una campaña llamada "software imposto". El nombre es una
broma: significa "software fiscal" y "software impuesto". La campaña
critica un programa propietario publicado por el Estado que los
ciudadanos deben utilizar para presentar sus declaraciones de impuestos.
FSF LA lanzó un programa libre compatible que la gente puede utilizar.
%
Copyleft es un marco legal para publicar obras de autor como libres, que
utiliza la ley de derechos de autor para exigir que sigan siendo libres.
%
Una licencia libre es aquella que respeta las cuatro libertades
esenciales; una licencia copyleft va más allá y defiende activamente
estas libertades para todos los usuarios.
%
Con algunas licencias no libres, un intermediario puede quitarle la
libertad al programa. Una versión modificada podría terminar siendo
completamente propietaria. Al obtener tu copia, no obtendrás con ella la
libertad que es tu justo derecho.
%
Una licencia copyleft dice que usted es libre de redistribuir copias de
la obra, con o sin cambios; pero toda la versión que distribuyas debe
estar bajo la misma licencia y debes hacer que el código fuente esté
disponible.
%
El autor de software debes respetar la libertad de los demás como los
demás respetan a la tuya.
%
El Copyleft traduce "prohibido prohibir" al lenguaje legal, y lo hace
legalmente vinculante.
%
De las seis licencias Creative Commons, dos son libres (CC-BY y
CC-BY-SA); de esos dos, sólo la última sigue el concepto de "prohibido
prohubir" y es Copyleft.
%
Cuando las personas copian y redistribuyen un programa, deben incluir
una copia de su manual. Al modificar el programa, deberían modificarel
manual en concordancia. Para que esto sea legalmente factible, el manual
en sí debe ser libre. Y para garantizar que permanezca libre, debe
contar con Copyleft.
%
Creative Commons es un proyecto creado en 2001 por un grupo de expertos
en ciberderecho (no relacionado con el copyleft, pero parcialmente
inspirado en él) y, al igual que el copyleft, ofrece alternativas al
copyright.
%
Creative Commons ofrece a los autores/creadores/artistas un conjunto de
seis licencias de derechos de autor con las que pueden publicar obras,
permitiéndoles compartirlas o reutilizarlas, y especificando a la vez
qué derechos se reservan o renuncian.
%
Las licencias Creative Commons se definen por combinaciones de
cláusulas: si la obra no puede reutilizarse con fines comerciales (NC),
si solo puede reutilizarse sin modificaciones (ND), si la versión
reutilizada también debe tener la misma licencia CC (SA); los seis
especifican que se atribuya el autor (BY).
%
Dos de las licencias Creative Commons son "libres" en el sentido en que
el software libre utiliza el término, y sólo una de las seis (CC-BY-SA)
es copyleft.
%
Como las obras educativas y de referencia han de ser libres, estas
deberían ser protegidas sólo por licencias libres (que, en el caso de
Creative Commons, son CC-BY o CC-SA).
%
A diferencia de las licencias Creative Commons, la licencia GNU FDL
también permite inclu8ir en la documentación secciones secundarias que
son invariantes.
%
Algunos manuales de software GNU cuentan con una sección invariante que
explica las ideas de libertad. Cualquier puede alterar las partes
técnicas de dicha documentación para corresponder a versiones
modificadas de programas propios, mas no pueden eliminar la sección que
explica que desarrollamos el manual por el bien de la libertad.
%
Para declaraciones de opiniones políticas recomiendo Creative Commons
CC-ND. No quisiera permitir que la gente publique versiones modificadas
de mis declaraciones sobre mis puntos de vista.
%
El ataque al intercambio digital es un intento de dividir a las personas
y dominarlas.
%
Para otro tipo de obras, aquellas que utilizas para hacer un trabajo
práctico en tu vida, no basta con ser compartibles. Dichas obras han de
ser libres, lo que significa tener las mismas cuatro libertades que
definen al Software Libre.
%
Las obras que realizan un trabajo práctico incluyen al software,
recetas, bras educativas, de referencia y muchos otros tipos de obras
que se le puedan ocurrir. Estas deben ser libres porque a menos que las
personas controlen las obras que utilizan para realizar trabajos en su
vida, no controlan su vida.
%
Hay formas de apoyar a los artistas sin restringir la libertad de
compartir. Solicitar donaciones y vender directamente a los fans ya
funciona bien para muchos artistas musicales.
%
Necesitamos luchar por la libertad de compartir, porque las
megacorporaciones de derechos de autor que se benefician de dividir al
Pueblo jamás cederán voluntariamente su poder.
%
La shell no concede nada sin una órden.
%
Nunca compréis ningún producto con DRM a menos que tengáis acceso
personal a los medios para romper el DRM.
%
El éxito de los productos con DRM se basa en la voluntad del Pueblo de
desperdiciar su libertad por algún tipo de comodidad o diversión.
%
El software libre disminuye en gran medida el ciclo impulsado por el
negocio que presiona a los usuarios a realizar actualizaciones de
software que requieren un hardware cada vez más potente.
%
Compraría una computadora nueva en lugar de usar una que me obligue a
vivir bajo el control de alguien.
%
Cuando podamos construir nuestro propio hardware a partir de planos,
entonces la cuestión de la libertad del software libre se aplicará
también al hardware.
%
La ingeniería genética y la ingeniería del software no podrían ser más
diferentes.
%
Los ingenieros del software combinan una enorme cantidad de elementos
simples bien definidos que actúan directamente para producir el
resultado deseado. La ingeniería genética implica trabajar con elementos
complejos que nunca fueron diseñados y cuyos efectos sólo se comprenden
parcialmente.
%
Existe una estrecha similitud entre la redistribución y modificación del
Software Libre, por un lado, y la práctica agrícola tradicional de
almacenar y cruzar semillas y animales, por el otro.
%
Considero la propiedad como un sistema que mantenemos porque a menudo es
bueno para todos, pero que puede salirse de control y causar daño.
%
GNU es un medio para un fin, y ese fin es la libertad.
%
Defiendo los derechos humanos, la democracia y la reducción de la
pobreza. Aplicar estas ideas al software me llevó a las ideas del
movimiento del software libre.
%
El software propietario en la mayoría de los casos es producto de una
corporación poderosa. Tiende a concentrar la riqueza y consolida el
poder de la corporación sobre los usuarios.
%
El Movimiento del Software Libre resulta ser una parte esencial de un
movimiento más amplio cuyo fin es derrocar el imperio de las
megacorporaciones.
%
Descarga una versión de GNU/Linux y comienza a usarla.
%
Contribuye al Software Libre.
%
Distribuya discos, habla con el Pueblo y ayúdalos a instalar software
libre.
%
Encuentra grupos de usuarios de Software Libre en tu zona.
%
Participad de aquellos proyectos que guarden el objetivo hacer que las
obras creativas se puedan compartir.
%
Preservad el material educativo o de referencia bajo el éjido de la
información pública.
%
Los hackers son una "subcultura" de programadores que surgió a finales
de los años 1960.
%
Los hackers eran los primeros geeks, que disfrutaban de una
"inteligencia lúdica" con los ordenadores y las redes. Gran parte de lo
que se convirtió en Internet y la informática en red moderna se debió a
su trabajo.
%
Tanto la formas de interactuar en línea (netiqueta) como la jerga de la
red se remontan a los hackers.
%
Intentar poseer conocimiento, intentar controlar si la gente se le
permite usarlo, o intentar detener a otros de compartirlo, es sabotaje.
%
La Libertad 0 es la libertad para ejecutar el programa como tu quieras.
%
La Libertad 1 es la libertad para estudiar el código fuente del programa
y luego modificarlo para hacer que el programa haga lo que tú deseas.
%
La Libertad 2 es la libertad de redistribuir copias exactas cuando lo
desees. Es una libertad para ayudar al prójimo.
%
Libertad 3 es la libertad para redistribuir copias de tus versiones
modificadas cuando lo desees. Esta es la liberta para contribuir a tu
comunidad.
%
El Derecho de Autor no era un problema cuando sólo restringía a las
editoriales, pero ahora se ha convertido en una excusa para atacar al
público.
%
Existe un fuerte Movimiento por el Software Libre en muchos países
latinoamericanos, en India, y en algunas partes de Europa.
%
La gente en los Movimientos Sociales y Ambientales han comprendido los
roles que el Software Libre y el Copyleft juegan en un futuro
igualitario.
%
El software privativo implica colonización digital. Como cualquier
sistema colonial, mantiene a la gente dividida e indefensa: dividida,
porque tienen prohibido compartir copias, e indefensa, porque no tienen
el código fuente, por lo que no pueden cambiarlo, ni siquiera comprobar
qué es realmente. haciendo.
%
Utilizando software de Micro$oft y Appl€, muchas personas han permitido
a esas empresas controlar lo que hacen sus computadoras.
%
Window$ tiene no menos de dos puertas traseras. Una de ellas permite a
la policía utilizar una memoria USB para tomar el control de cualquier
máquina con Window$ y ver datos cifrados.
%
Las características maliciosas son frecuentes en el software propietario
porque el desarrollador o propietario tiene el control total. Este poder
tienta al desarrollador a hacer cosas maliciosas a los usuarios.
%
El software privativo puede complacerlo cumpliendo algunos de sus deseos
informáticos, pero su primera lealtad será siempre hacia el
desarrollador.
%
GPLv3 es leal a la comunidad.
%
Brasil vio una campaña llamada "software imposto". El nombre es una
broma: significa "software fiscal" y "software impuesto". La campaña
critica un programa propietario publicado por el Estado que los
ciudadanos deben utilizar para presentar sus declaraciones de impuestos.
FSF LA lanzó un programa libre compatible que la gente puede utilizar.
%
Copyleft es un marco legal para publicar obras de autor como libres, que
utiliza la ley de derechos de autor para exigir que sigan siendo libres.
%
Una licencia libre es aquella que respeta las cuatro libertades
esenciales; una licencia copyleft va más allá y defiende activamente
estas libertades para todos los usuarios.
%
Con algunas licencias no libres, un intermediario puede quitarle la
libertad al programa. Una versión modificada podría terminar siendo
completamente propietaria. Al obtener tu copia, no obtendrás con ella la
libertad que es tu justo derecho.
%
Una licencia copyleft dice que usted es libre de redistribuir copias de
la obra, con o sin cambios; pero toda la versión que distribuyas debe
estar bajo la misma licencia y debes hacer que el código fuente esté
disponible.
%
El autor de software debes respetar la libertad de los demás como los
demás respetan a la tuya.
%
El Copyleft traduce "prohibido prohibir" al lenguaje legal, y lo hace
legalmente vinculante.
%
De las seis licencias Creative Commons, dos son libres (CC-BY y
CC-BY-SA); de esos dos, sólo la última sigue el concepto de "prohibido
prohubir" y es Copyleft.
%
Cuando las personas copian y redistribuyen un programa, deben incluir
una copia de su manual. Al modificar el programa, deberían modificarel
manual en concordancia. Para que esto sea legalmente factible, el manual
en sí debe ser libre. Y para garantizar que permanezca libre, debe
contar con Copyleft.
%
Creative Commons es un proyecto creado en 2001 por un grupo de expertos
en ciberderecho (no relacionado con el copyleft, pero parcialmente
inspirado en él) y, al igual que el copyleft, ofrece alternativas al
copyright.
%
Creative Commons ofrece a los autores/creadores/artistas un conjunto de
seis licencias de derechos de autor con las que pueden publicar obras,
permitiéndoles compartirlas o reutilizarlas, y especificando a la vez
qué derechos se reservan o renuncian.
%
Las licencias Creative Commons se definen por combinaciones de
cláusulas: si la obra no puede reutilizarse con fines comerciales (NC),
si solo puede reutilizarse sin modificaciones (ND), si la versión
reutilizada también debe tener la misma licencia CC (SA); los seis
especifican que se atribuya el autor (BY).
%
Dos de las licencias Creative Commons son "libres" en el sentido en que
el software libre utiliza el término, y sólo una de las seis (CC-BY-SA)
es copyleft.
%
Como las obras educativas y de referencia han de ser libres, estas
deberían ser protegidas sólo por licencias libres (que, en el caso de
Creative Commons, son CC-BY o CC-SA).
%
A diferencia de las licencias Creative Commons, la licencia GNU FDL
también permite inclu8ir en la documentación secciones secundarias que
son invariantes.
%
Algunos manuales de software GNU cuentan con una sección invariante que
explica las ideas de libertad. Cualquier puede alterar las partes
técnicas de dicha documentación para corresponder a versiones
modificadas de programas propios, mas no pueden eliminar la sección que
explica que desarrollamos el manual por el bien de la libertad.
%
Para declaraciones de opiniones políticas recomiendo Creative Commons
CC-ND. No quisiera permitir que la gente publique versiones modificadas
de mis declaraciones sobre mis puntos de vista.
%
El ataque al intercambio digital es un intento de dividir a las personas
y dominarlas.
%
Para otro tipo de obras, aquellas que utilizas para hacer un trabajo
práctico en tu vida, no basta con ser compartibles. Dichas obras han de
ser libres, lo que significa tener las mismas cuatro libertades que
definen al Software Libre.
%
Las obras que realizan un trabajo práctico incluyen al software,
recetas, bras educativas, de referencia y muchos otros tipos de obras
que se le puedan ocurrir. Estas deben ser libres porque a menos que las
personas controlen las obras que utilizan para realizar trabajos en su
vida, no controlan su vida.
%
Hay formas de apoyar a los artistas sin restringir la libertad de
compartir. Solicitar donaciones y vender directamente a los fans ya
funciona bien para muchos artistas musicales.
%
Necesitamos luchar por la libertad de compartir, porque las
megacorporaciones de derechos de autor que se benefician de dividir al
Pueblo jamás cederán voluntariamente su poder.
%
La shell no concede nada sin una órden.
%
Nunca compréis ningún producto con DRM a menos que tengáis acceso
personal a los medios para romper el DRM.
%
El éxito de los productos con DRM se basa en la voluntad del Pueblo de
desperdiciar su libertad por algún tipo de comodidad o diversión.
%
El software libre disminuye en gran medida el ciclo impulsado por el
negocio que presiona a los usuarios a realizar actualizaciones de
software que requieren un hardware cada vez más potente.
%
Compraría una computadora nueva en lugar de usar una que me obligue a
vivir bajo el control de alguien.
%
Cuando podamos construir nuestro propio hardware a partir de planos,
entonces la cuestión de la libertad del software libre se aplicará
también al hardware.
%
La ingeniería genética y la ingeniería del software no podrían ser más
diferentes.
%
Los ingenieros del software combinan una enorme cantidad de elementos
simples bien definidos que actúan directamente para producir el
resultado deseado. La ingeniería genética implica trabajar con elementos
complejos que nunca fueron diseñados y cuyos efectos sólo se comprenden
parcialmente.
%
Existe una estrecha similitud entre la redistribución y modificación del
Software Libre, por un lado, y la práctica agrícola tradicional de
almacenar y cruzar semillas y animales, por el otro.
%
Considero la propiedad como un sistema que mantenemos porque a menudo es
bueno para todos, pero que puede salirse de control y causar daño.
%
GNU es un medio para un fin, y ese fin es la libertad.
%
Defiendo los derechos humanos, la democracia y la reducción de la
pobreza. Aplicar estas ideas al software me llevó a las ideas del
movimiento del software libre.
%
El software propietario en la mayoría de los casos es producto de una
corporación poderosa. Tiende a concentrar la riqueza y consolida el
poder de la corporación sobre los usuarios.
%
El Movimiento del Software Libre resulta ser una parte esencial de un
movimiento más amplio cuyo fin es derrocar el imperio de las
megacorporaciones.
%
Descarga una versión de GNU/Linux y comienza a usarla.
%
Contribuye al Software Libre.
%
Distribuya discos, habla con el Pueblo y ayúdalos a instalar software
libre.
%
Encuentra grupos de usuarios de Software Libre en tu zona.
%
Participad de aquellos proyectos que guarden el objetivo hacer que las
obras creativas se puedan compartir.
%
Preservad el material educativo o de referencia bajo el éjido de la
información pública.
%
Los hackers son una "subcultura" de programadores que surgió a finales
de los años 1960.
%
Los hackers eran los primeros geeks, que disfrutaban de una
"inteligencia lúdica" con los ordenadores y las redes. Gran parte de lo
que se convirtió en Internet y la informática en red moderna se debió a
su trabajo.
%
Tanto la formas de interactuar en línea (netiqueta) como la jerga de la
red se remontan a los hackers.
%
Intentar poseer conocimiento, intentar controlar si la gente se le
permite usarlo, o intentar detener a otros de compartirlo, es sabotaje.
%
La Libertad 0 es la libertad para ejecutar el programa como tu quieras.
%
La Libertad 1 es la libertad para estudiar el código fuente del programa
y luego modificarlo para hacer que el programa haga lo que tú deseas.
%
La Libertad 2 es la libertad de redistribuir copias exactas cuando lo
desees. Es una libertad para ayudar al prójimo.
%
Libertad 3 es la libertad para redistribuir copias de tus versiones
modificadas cuando lo desees. Esta es la liberta para contribuir a tu
comunidad.
%
El Derecho de Autor no era un problema cuando sólo restringía a las
editoriales, pero ahora se ha convertido en una excusa para atacar al
público.
%
Existe un fuerte Movimiento por el Software Libre en muchos países
latinoamericanos, en India, y en algunas partes de Europa.
%
La gente en los Movimientos Sociales y Ambientales han comprendido los
roles que el Software Libre y el Copyleft juegan en un futuro
igualitario.
%
El software privativo implica colonización digital. Como cualquier
sistema colonial, mantiene a la gente dividida e indefensa: dividida,
porque tienen prohibido compartir copias, e indefensa, porque no tienen
el código fuente, por lo que no pueden cambiarlo, ni siquiera comprobar
qué es realmente. haciendo.
%
Utilizando software de Micro$oft y Appl€, muchas personas han permitido
a esas empresas controlar lo que hacen sus computadoras.
%
Window$ tiene no menos de dos puertas traseras. Una de ellas permite a
la policía utilizar una memoria USB para tomar el control de cualquier
máquina con Window$ y ver datos cifrados.
%
Las características maliciosas son frecuentes en el software propietario
porque el desarrollador o propietario tiene el control total. Este poder
tienta al desarrollador a hacer cosas maliciosas a los usuarios.
%
El software privativo puede complacerlo cumpliendo algunos de sus deseos
informáticos, pero su primera lealtad será siempre hacia el
desarrollador.
%
GPLv3 es leal a la comunidad.
%
Brasil vio una campaña llamada "software imposto". El nombre es una
broma: significa "software fiscal" y "software impuesto". La campaña
critica un programa propietario publicado por el Estado que los
ciudadanos deben utilizar para presentar sus declaraciones de impuestos.
FSF LA lanzó un programa libre compatible que la gente puede utilizar.
%
Copyleft es un marco legal para publicar obras de autor como libres, que
utiliza la ley de derechos de autor para exigir que sigan siendo libres.
%
Una licencia libre es aquella que respeta las cuatro libertades
esenciales; una licencia copyleft va más allá y defiende activamente
estas libertades para todos los usuarios.
%
Con algunas licencias no libres, un intermediario puede quitarle la
libertad al programa. Una versión modificada podría terminar siendo
completamente propietaria. Al obtener tu copia, no obtendrás con ella la
libertad que es tu justo derecho.
%
Una licencia copyleft dice que usted es libre de redistribuir copias de
la obra, con o sin cambios; pero toda la versión que distribuyas debe
estar bajo la misma licencia y debes hacer que el código fuente esté
disponible.
%
El autor de software debes respetar la libertad de los demás como los
demás respetan a la tuya.
%
El Copyleft traduce "prohibido prohibir" al lenguaje legal, y lo hace
legalmente vinculante.
%
De las seis licencias Creative Commons, dos son libres (CC-BY y
CC-BY-SA); de esos dos, sólo la última sigue el concepto de "prohibido
prohubir" y es Copyleft.
%
Cuando las personas copian y redistribuyen un programa, deben incluir
una copia de su manual. Al modificar el programa, deberían modificarel
manual en concordancia. Para que esto sea legalmente factible, el manual
en sí debe ser libre. Y para garantizar que permanezca libre, debe
contar con Copyleft.
%
Creative Commons es un proyecto creado en 2001 por un grupo de expertos
en ciberderecho (no relacionado con el copyleft, pero parcialmente
inspirado en él) y, al igual que el copyleft, ofrece alternativas al
copyright.
%
Creative Commons ofrece a los autores/creadores/artistas un conjunto de
seis licencias de derechos de autor con las que pueden publicar obras,
permitiéndoles compartirlas o reutilizarlas, y especificando a la vez
qué derechos se reservan o renuncian.
%
Las licencias Creative Commons se definen por combinaciones de
cláusulas: si la obra no puede reutilizarse con fines comerciales (NC),
si solo puede reutilizarse sin modificaciones (ND), si la versión
reutilizada también debe tener la misma licencia CC (SA); los seis
especifican que se atribuya el autor (BY).
%
Dos de las licencias Creative Commons son "libres" en el sentido en que
el software libre utiliza el término, y sólo una de las seis (CC-BY-SA)
es copyleft.
%
Como las obras educativas y de referencia han de ser libres, estas
deberían ser protegidas sólo por licencias libres (que, en el caso de
Creative Commons, son CC-BY o CC-SA).
%
A diferencia de las licencias Creative Commons, la licencia GNU FDL
también permite inclu8ir en la documentación secciones secundarias que
son invariantes.
%
Algunos manuales de software GNU cuentan con una sección invariante que
explica las ideas de libertad. Cualquier puede alterar las partes
técnicas de dicha documentación para corresponder a versiones
modificadas de programas propios, mas no pueden eliminar la sección que
explica que desarrollamos el manual por el bien de la libertad.
%
Para declaraciones de opiniones políticas recomiendo Creative Commons
CC-ND. No quisiera permitir que la gente publique versiones modificadas
de mis declaraciones sobre mis puntos de vista.
%
El ataque al intercambio digital es un intento de dividir a las personas
y dominarlas.
%
Para otro tipo de obras, aquellas que utilizas para hacer un trabajo
práctico en tu vida, no basta con ser compartibles. Dichas obras han de
ser libres, lo que significa tener las mismas cuatro libertades que
definen al Software Libre.
%
Las obras que realizan un trabajo práctico incluyen al software,
recetas, bras educativas, de referencia y muchos otros tipos de obras
que se le puedan ocurrir. Estas deben ser libres porque a menos que las
personas controlen las obras que utilizan para realizar trabajos en su
vida, no controlan su vida.
%
Hay formas de apoyar a los artistas sin restringir la libertad de
compartir. Solicitar donaciones y vender directamente a los fans ya
funciona bien para muchos artistas musicales.
%
Necesitamos luchar por la libertad de compartir, porque las
megacorporaciones de derechos de autor que se benefician de dividir al
Pueblo jamás cederán voluntariamente su poder.
%
La shell no concede nada sin una órden.
%
Nunca compréis ningún producto con DRM a menos que tengáis acceso
personal a los medios para romper el DRM.
%
El éxito de los productos con DRM se basa en la voluntad del Pueblo de
desperdiciar su libertad por algún tipo de comodidad o diversión.
%
El software libre disminuye en gran medida el ciclo impulsado por el
negocio que presiona a los usuarios a realizar actualizaciones de
software que requieren un hardware cada vez más potente.
%
Compraría una computadora nueva en lugar de usar una que me obligue a
vivir bajo el control de alguien.
%
Cuando podamos construir nuestro propio hardware a partir de planos,
entonces la cuestión de la libertad del software libre se aplicará
también al hardware.
%
La ingeniería genética y la ingeniería del software no podrían ser más
diferentes.
%
Los ingenieros del software combinan una enorme cantidad de elementos
simples bien definidos que actúan directamente para producir el
resultado deseado. La ingeniería genética implica trabajar con elementos
complejos que nunca fueron diseñados y cuyos efectos sólo se comprenden
parcialmente.
%
Existe una estrecha similitud entre la redistribución y modificación del
Software Libre, por un lado, y la práctica agrícola tradicional de
almacenar y cruzar semillas y animales, por el otro.
%
Considero la propiedad como un sistema que mantenemos porque a menudo es
bueno para todos, pero que puede salirse de control y causar daño.
%
GNU es un medio para un fin, y ese fin es la libertad.
%
Defiendo los derechos humanos, la democracia y la reducción de la
pobreza. Aplicar estas ideas al software me llevó a las ideas del
movimiento del software libre.
%
El software propietario en la mayoría de los casos es producto de una
corporación poderosa. Tiende a concentrar la riqueza y consolida el
poder de la corporación sobre los usuarios.
%
El Movimiento del Software Libre resulta ser una parte esencial de un
movimiento más amplio cuyo fin es derrocar el imperio de las
megacorporaciones.
%
Descarga una versión de GNU/Linux y comienza a usarla.
%
Contribuye al Software Libre.
%
Distribuya discos, habla con el Pueblo y ayúdalos a instalar software
libre.
%
Encuentra grupos de usuarios de Software Libre en tu zona.
%
Participad de aquellos proyectos que guarden el objetivo hacer que las
obras creativas se puedan compartir.
%
Preservad el material educativo o de referencia bajo el éjido de la
información pública.
%
Los hackers son una "subcultura" de programadores que surgió a finales
de los años 1960.
%
Los hackers eran los primeros geeks, que disfrutaban de una
"inteligencia lúdica" con los ordenadores y las redes. Gran parte de lo
que se convirtió en Internet y la informática en red moderna se debió a
su trabajo.
%
Tanto la formas de interactuar en línea (netiqueta) como la jerga de la
red se remontan a los hackers.
%
Cuando se contribuye a un proyecto existente, la versión modificada se
debe publicar bajo la misma licencia que la obra original.
%
Es bueno cooperar con quienes mantienen el proyecto, y usar una licencia
distinta para las modificaciones suele dificultar la cooperación. Debe
hacerlo únicamente cuando exista una razón de peso que lo justifique.
%
Un caso en el que se puede justificar el uso de una licencia distinta es
cuando se realizan cambios significativos en una obra que está bajo una
licencia sin copyleft. Si la versión que usted ha creado es
considerablemente más útil que el original, entonces merece ser
licenciada con copyleft.
%
Si por cualquier motivo opta por publicar sus contribuciones bajo una
licencia distinta, debe asegurarse de que la licencia original permita
el uso del material bajo la licencia que ha elegido.
%
Para ser honesto, indique explícitamente qué partes del trabajo se
encuentran bajo qué licencia.
%
Para la mayoría de los programas recomendamos utilizar la versión más
reciente de la Licencia Pública General de GNU (GPL). Su copyleft fuerte
es apropiado para todo tipo de software, e incluye numerosas
protecciones para la libertad de los usuarios.
%
Para permitir la utilización de versiones futuras de la licencia,
especifique "versión 3 o cualquier versión posterior". De ese modo su
programa será compatible con el código que en el futuro pueda publicarse
bajo las siguientes versiones de la GPL.
%
Para la mayoría de los programas pequeños, usar el copyleft no amerita
el esfuerzo.
%
Cuando el código fuente de un paquete de software tiene menos de 300
líneas, los beneficios que proporciona el copyleft suelen ser demasiado
pequeños para justificar la inconveniencia de asegurarse que una copia
de la licencia acompañe siempre al software.
%
La Licencia Apache 2.0 se trata de una licencia de software débil, laxa,
"blanda" (sin copyleft), que contiene cláusulas para evitar que
contribuidores y distribuidores sean demandados por violación de
patentes.
%
La licencia Apache 2.0 es la mejor de las licencias débiles (blandas).
Así que, si por el motivo que sea va a emplear una licencia débil, esta
es la que recomendamos.
%
Algunas bibliotecas implementan formatos de datos libres que compiten
con formatos de datos restrictivos, como Ogg Vorbis (que compite con
MP3) y WebM (que compite con MPEG-4).
%
El éxito de los formatos libres requiere que se permita que muchos
programas de aplicaciones privativas enlacen con el código para manejar
el formato.
%
Si queremos convencer a los desarrolladores de aplicaciones privativas
de que utilicen la biblioteca para el formato libre, tendremos que
facilitárselo empleando para la biblioteca una licencia débil, como la
Licencia Apache 2.0.
%
Si los desarrolladores ya están utilizando una biblioteca alternativa
bien establecida publicada bajo una licencia que no es libre o una
licencia blanda, permisiva, entonces recomendamos usar la Licencia
Pública General Reducida de GNU (GNU LGPL).
%
Si existe la probabilidad de que otros hagan versiones mejoradas de su
programa para ejecutar en servidores sin distribuirlas a nadie más, y si
le preocupa que esto ponga en desventaja la versión que usted ha
publicado, recomendamos utilizar la Licencia Pública General Affero de
GNU (AGPL).
%
Los términos de la licencia AGPL son prácticamente idénticos a los de la
GPL; la única diferencia sustancial es que incluye una cláusula
adicional para garantizar que las personas que utilizan el software en
red puedan obtener el código fuente correspondiente.
%
El requisito de la licencia AGPL no aborda los problemas que se les
pueden presentar a los usuarios cuando confían sus tareas informáticas o
sus datos a un servidor ajeno.
%
Para tutoriales, manuales de referencia y otros trabajos extensos de
documentación recomendamos la Licencia de Documentación Libre de GNU
(GFDL).
%
La Licencia de Documentación Libre de GNU (GFDL) es una licencia con
copyleft fuerte para trabajos educativos, inicialmente escrita para
manuales de software, que incluye cláusulas enfocadas específicamente a
problemas comunes que surgen cuando se distribuyen o modifican esos
trabajos.
%
Para trabajos de documentación breves y secundarios, como tarjetas de
referencia, es mejor usar la Licencia completamente permisiva de GNU,
dado que la licencia GFDL difícilmente podría caber en una tarjeta de
referencia.
%
Para páginas de manual recomendamos la GFDL si la página es extensa, y
la Licencia completamente permisiva de GNU si es corta.
%
Hay documentación que incluye código fuente de software. Por ejemplo, un
manual de un lenguaje de programación puede incluir ejemplos que
faciliten la comprensión. Se deben incluir dentro del manual bajo los
términos de la licencia FDL, y publicarlos bajo otra licencia que
resulte apropiada para software.
%
Si está creando estas obras para utilizarlas específicamente con un
proyecto de software, generalmente recomendamos que las publique bajo la
misma licencia que el software.
%
Emplear la misma licencia que en el software facilitará su cumplimiento
a los distribuidores y evitará dudas sobre posibles cuestiones de
compatibilidad.
%
Si su obra no se ha creado para utilizarse con un proyecto de software
en particular, o si no fuera apropiado utilizar la misma licencia que en
el proyecto, entonces únicamente le recomendamos que elija una licencia
con copyleft apropiada para su trabajo.
%
La licencia Creative Commons Reconocimiento-CompartirIgual es una
licencia con copyleft que puede utilizarse para varios tipos diferentes
de obras.
%
Nadie debe resultar restringido en el software que usa.
%
Algunas empresas han creado varios tipos diferentes de dispositivos que
ejecutan software GPL y luego han manipulado el hardware para poder
cambiar el software que se está ejecutando, pero impidiéndole que usted
lo haga.
%
Si un dispositivo puede ejecutar software arbitrario, es una computadora
de uso general y su propietario debe controlar lo que hace.
%
GPLv3 no es una licencia radicalmente nueva; en cambio es una evolución
de la versión anterior.
%
Nadie debería poder impedirle escribir el código que desee, y GPLv3
protege este derecho por usted.
%
La GNU GPL no restringe lo que la gente hace en el software; simplemente
les impide restringir a otros.
%
El derecho a modificar su software dejará de tener sentido si ninguna de
sus computadoras le permite hacerlo.
%
GPLv3 no impide que las personas utilicen la criptografía. Sólo impide
que las personas le quiten los derechos que le otorga la licencia, ya
sea a través de la ley de patentes, la tecnología o cualquier otro
medio.
%
Uno de los requisitos fundamentales de la GPL es que cuando distribuye
código objeto a los usuarios, también debe proporcionarles una forma de
obtener el código fuente.
%
Cuando aloja código objeto en un servidor web o FTP, simplemente puede
proporcionar instrucciones que indiquen a los visitantes cómo obtener
también el código fuente de un servidor de terceros.
%
En la Licencia GPLv3, las personas que simplemente descargan o siembran
el torrent están exentas de los requisitos de licencia para transmitir
el software.
%
Quien inicie el torrent puede proporcionar el código fuente simplemente
diciéndole a otros usuarios de torrent dónde está disponible en un
servidor de red pública.
%
No es necesario que proporcione la fuente de ciertos componentes
principales del sistema operativo, como la biblioteca C.
%
GPLv3 ha ajustado la definición de Biblioteca del sistema para incluir
software que puede no venir directamente con el sistema operativo, pero
que se puede esperar razonablemente que todos los usuarios del software
tengan.
%
GPLv3 ofrece un respiro para el buen comportamiento: si viola la
licencia, recuperará sus derechos una vez que detenga la violación, a
menos que un titular de los derechos de autor se comunique con usted
dentro de los 60 días.
%
El cumplimiento de la GPL siempre ha sido la principal prioridad del FSF
Compliance Lab y otros grupos que hacen cumplir la licencia en todo el
mundo.
%
Hoy en día cualquier persona puede usar su ordenador en libertad.
%
El Proyecto GNU fue fundado en 1983 por Richard Stallman para
desarrollar un sistema operativo libre: el sistema operativo GNU.
%
La libertad del software asume un rol de fundamental importancia en el
ámbito educativo.
%
Las instituciones educativas de todos los niveles deben utilizar y
enseñar exclusivamente software libre porque es el único que les permite
cumplir con sus misiones fundamentales: difundir el conocimiento y
enseñar a los estudiantes a ser buenos miembros de su comunidad.
%
El código fuente y los métodos del software libre son parte del
conocimiento humano.
%
El software privativo es conocimiento secreto y restringido y, por lo
tanto, se opone a la misión de las instituciones educativas.
%
El software libre favorece la enseñanza, mientras el software privativo
la prohíbe.
%
El software libre no es simplemente un asunto técnico, es un asunto
ético, social y político.
%
Es una cuestión de derechos humanos que los usuarios de software deben
tener.
%
La libertad y la cooperación son valores esenciales del software libre.
%
El sistema GNU pone en práctica valores de libertad y cooperación y el
principio del compartir, pues compartir es bueno y útil para el progreso
de la humanidad.
%
Las tecnologías digitales privativas, que los gigantes de la tecnología
usan como instrumentos de vigilancia y maltrato, se han infiltrado en
todas las esferas de nuestra vida.
%
La mejor manera de luchar contra este poderoso imperio de las
megacorporaciones es dotar a los ciudadanos de la facultad de
inspeccionar y tomar el control del software que usan.
%
La misión de las instituciones educativas es contribuir a la mejora de
la sociedad. Tienen la responsabilidad de proporcionar al alumnado los
medios para ejercer sus derechos en el campo de la computación, y para
ello en los centros educativos se debe enseñar e instalar únicamente
software libre.
%
No existe en la educación ninguna alternativa legítima al software
libre.
%
El software libre no es una mera opción, sino una condición esencial
para que las instituciones educativas lleven a cabo su misión social.
%
Profesores, estudiantes, padres, defensores del software libre y
miembros de la comunidad en general están actuando para frenar el uso de
programas privativos en las escuelas.
%
Los estudiantes se oponen sistemáticamente al software privativo que se
recomienda en las escuelas.
%
Las escuelas tienen la responsabilidad moral de proteger a sus
estudiantes frente al espionaje, pero si no lo hacen, los alumnos y sus
padres deben oponerse y no permitir que eso ocurra.
%
Las escuelas deben rechazar cualquier software privativo
%
La comunidad del software libre ofrece programas de comunicación y
videoconferencia que respetan la libertad y la privacidad.
%
La transición hacia la enseñanza a distancia ha traído consigo a un
huésped no deseado: el software que no es libre para las clases en
línea.
%
Muchas escuelas han adoptado programas de videoconferencia y sistemas de
gestión del aprendizaje (LMS) que son software privativo. Las compañías
de desarrollo de software utilizan estos programas que no son libres
como arma contra los derechos fundamentales de libertad y privacidad de
los alumnos y profesores.
%
El software que no es libre es contrario a la educación, ya que prohíbe
el intercambio de conocimiento y está diseñado específicamente para
impedirlo.
%
En los entornos educativos no se debe dar cabida al software que no es
libre.
%
No llamábamos "software libre" a nuestro software porque el término no
existía todavía; pero era exactamente eso. Cuando alguien de otra
universidad o de otra empresa quería instalar y utilizar un programa, se
lo prestábamos de buen grado.
%
Si descubrías a alguien utilizando un programa poco habitual e
interesante, siempre podías preguntarle por el código fuente, leerlo,
modificarlo o canibalizar partes de él para montar un programa nuevo.
%
El uso de la palabra "hacker" para definir al "que rompe sistemas de
seguridad" es una confusión promovida por los medios de masas.
%
Nosotros, los hackers, nos negamos a reconocer esta acepción y seguimos
utilizando este término para describir a "alguien que ama la
programación y disfruta explorando nuevas posibilidades".
%
Duando DEC dejó de fabricar la serie PDP-10. Su arquitectura elegante y
poderosa de los años sesenta no podía adaptarse de forma natural a los
grandes espacios de direccionamiento característicos de los años
ochenta.
%
Los modernos ordenadores de los 80s, como el VAX o el 68020, contaban
con su propio sistema operativo, pero ninguno utilizaba software libre.
Había que firmar un acuerdo de confidencialidad incluso para obtener una
copia ejecutable.
%
Los titulares de software propietario establecieron la siguiente norma:
"Si compartes con tu vecino, te conviertes en un pirata. Si quieres
hacer algún cambio, tendrás que rogárnoslo".
%
La idea de que el sistema social en torno al software propietario -un
sistema que te impide compartir o modificar el software-es antisocial,
poco ético, sencillamente equivocado, puede sorprender a algunos
%
Lo más fácil hubiera sido subirme al tren del software propietario,
firmar acuerdos de confidencialidad y prometer no ayudar a mis
compañeros hackers
%
Decidí estudiar la manera en que un programador podría hacer algo por el
bien común. Me pregunté si podía escribir uno o varios programas que
permitiesen resucitar nuevamente a nuestra extinta comunidad.
%
La primera cosa necesaria era crear un sistema operativo, el software
crucial para empezar a utilizar un ordenador.
%
Con un sistema operativo puedes hacer muchas cosas; sin él, ni siquiera
puedes hacer funcionar un ordenador.
%
Mediante un sistema operativo libre podríamos armar una nueva comunidad
cooperativa de hackers -e invitar a todos a que se uniesen a ella.
%
Como desarrollador de un sistema operativo, tenía las aptitudes
necesarias para desempeñar esta labor.
%
Opté por crear un sistema compatible con Unix para dotarle así de
portabilidad y facilitar el cambio a los usuarios de Unix.
%
El nombre de GNU fue elegido según una tradición de los hackers, como un
acrónimo recursivo de "GNU’s Not Unix".
%
Un sistema operativo no significa sólo un kernel, que apenas permite
ejecutar otros programas.
%
En los años setenta, cualquier sistema operativo decente incluía sus
propios procesadores de comandos, ensambladores, compiladores,
interpretes, depuradores, editores de textos, gestores de correo y mucho
más.
%
Como ateo, no sigo el ejemplo de ningún líder religioso, pero a veces
admiro las cosas que han llegado a decir.
%
A veces se malinterpreta el término de "software libre" -para empezar,
no tiene ninguna relación con el precio. Lo que nos interesa es la
libertad.
%
Libertad 0: La libertad de ejecutar el programa sea cual sea el
propósito.
%
Libertad 1: La libertad para modificar el programa para ajustarlo a tus
necesidades. (Para que se trate de una libertad efectiva en la práctica,
deberás tener acceso al código fuente, dado que sin él la tarea de
incorporar cambios en un programa esextremadamente difícil.)
%
Libertad 2: La libertad de redistribuir copias, ya sea de forma
gratuita, ya sea a cambio del pago de un precio.
%
Libertad 3: La libertad de distribuir versiones modificadas del
programa, de tal forma que la comunidad pueda aprovechar las mejora
introducidas.
%
Dado que nos referimos a la libertad y no al precio, no existe
contradicción alguna entre la venta de copias y el software libre.
%
Las colecciones de software libre a la venta en formato de CD-ROM son
muy importantes para la comunidad y venderlas es una forma de recaudar
fondos para el desarrollo de software libre.
%
El desarrollo de un sistema operativo de principio a fin es un proyecto
colosal.
%
Desde el inicio, decidí usar TEX como principal procesador de texto, y
unos años más tarde me pasé al X Window System en vez de escribir otro
sistema de ventanas para GNU.
%
El sistema GNU no consiste en una colección completa de software GNU. El
sistema incluye programas desarrollados por otros individuos y para
proyectos con sus propios propósitos que empleamos por su condición de
software libre.
%
En enero de 1984 abandoné mi empleo en el MIT y comencé a escribir
software GNU.
%
Abandonar el MIT era imprescindible si quería que nadie interfiriera en
la distribución de GNU como software libre.
%
No tenía ninguna intención de hacer una gran cantidad de trabajo para
ver como se convertía en algo inútil en relación a su propósito inicial:
crear una nueva comunidad dedicada a compartir software.
%
Decidí que el primer programa para el proyecto GNU sería un compilador
capaz de trabajar en múltiples lenguajes y plataformas.
%
Para evitar tener que reescribir todo el compilador, obtuve el código
fuente para el compilador Pastel, un compilador multiplataforma
desarrollado en Lawrence Livermore Lab.
%
Me di cuenta de que el compilador Pastel analizaba el archivo de entrada
en forma de árbol sintáctico, convirtiéndolo en una cadena de
"instrucciones" y luego generando todo el archivo de salida sin liberar
espacio de almacenamiento.
%
Comencé a trabajar en el GNU Emacs en septiembre de 1984, y a principios
de 1985 ya podía ser utilizado. Esto me permitió comenzar a usar el
sistema Unix para labores de edición.
%
Dado que nunca me interesó aprender a usar vi o ed, hasta entonces había
realizado mis ediciones en otro tipo de máquinas.
%
En aquel momento había gente interesada en utilizar GNU Emacs, lo que
planteó el problema de la distribución.
%
El ordenador prep.ai.mit.edu, se convirtió así en el principal sitio FTP
de distribución de GNU.
%
Anuncié que enviaría copias de GNU EMACS a cualquiera interesado a
cambio de ciento cincuenta dólares. Así comenzó mi empresa de
distribución de software libre, precursora de las empresas que hoy
distribuyen sistemas Linux basados en GNU.
%
Cuando un programa de software libre deja de estar en manos de su autor,
esto no significa necesariamente que siga siendo software libre para
cualquiera que se haga con una copia de él.
%
El software de dominio público -software sin copyright-es software
libre, pero cualquiera puede modificarlo y hacer una versión propietaria
a partir de él.
%
Los desarrolladores del X Window System no lo consideraron un problema
-lo esperaban y pretendían que eso ocurriera. Su objetivo no era la
libertad sino el "éxito", definido en función del número de usuarios.
%
A muchos programadores no les importa si los usuarios de su programa
eran libres o no, bastaba con que fueran muchos.
%
El objetivo de GNU era proporcionar libertad a los usuarios, no
simplemente ser popular.
%
Necesitábamos idear unos términos de distribución que impidieran que el
software de GNU se convirtiera en software propietario. El método que
empleamos se denominó copyleft.
%
Copyleft utiliza la ley de copyright, pero dándole la vuelta para servir
a un propósito opuesto al habitual: en lugar de privatizar el software,
ayuda a preservarlo como software libre.
%
La idea fundamental del copyleft es que se autoriza la ejecución del
programa, su copia, modificación y distribución de versiones
modificadas, siempre que no se añada ninguna clase de restricción a
posteriori.
%
Las 4 libertades cruciales que definen el "software libre" quedan
garantizadas para cualquiera que posea una copia; estas libertades se
convierten en derechos inalienables.
%
Para que el copyleft sea efectivo las versiones modificadas deberán ser
libres también. Esto garantiza que cualquier tarea basada en nuestro
trabajo se pondrá a disposición de la comunidad si llegara a publicarse.
%
El requisito de que los cambios sean libres es esencial para garantizar
la libertad de los usuarios del programa.
%
Al combinar un programa libre con un código no libre se plantea un
problema similar. Esta combinación acabaría siendo inevitablemente no
libre; las libertades suprimidas en la parte no libre del programa
afectarán a éste en su totalidad.
%
Nosotros aplicamos una forma específica de copyleft para la mayor parte
del software de GNU, conocida como la GNU General Public License o para
abreviar GNU GPL.
%
Recurrimos a otros tipos de copyleft según las circunstancias
específicas.
%
En 1984 o 1985, Don Hopkins -un compañero con mucha imaginación-me envió
una carta. En el sobre había escrito una serie de proverbios, incluido
el que sigue: "Copyleft-quedan revocados todos los derechos"
%
Empleé la palabra "copyleft" para bautizar el concepto de distribución
que andaba desarrollando en aquel momento.
%
A medida que aumentaba el interés por Emacs, otros vinieron a sumarse al
proyecto GNU, y decidimos que era el momento de volver a buscar fuentes
de financiación.
%
En 1985 creamos la Free Software Foundation, una organización sin ánimo
de lucro dedicada al desarrollo de software libre.
%
La FSF también se hizo con la empresa de distribución de copias de
Emacs, a lo que más tarde añadiría otros programas libres-no sólo de
GNU-así como la venta de manuales libres.
%
La FSF acepta donaciones, pero la mayor parte de sus ingresos siempre
procedió de las ventas de copias de software libre y de otros servicios
relacionados con éste.
%
Los empleados de la Free Software Foundation han escrito y se han
encargado del mantenimiento de una serie de paquetes de software de GNU.
%
Todos los programas ejecutados en un sistema GNU/Linux utilizan la
biblioteca C de GNU para comunicarse con Linux.
%
La shell utilizada en la mayoría de los sistemas GNU/Linux se llama BASH
-acrónimo de Bourne Again Shell-, desarrollada por otro empleado de la
FSF, Brian Fox.
%
Con el nombre de "Bourne again Shell" pretendíamos mofarnos de la
"Bourne Shell", la shell más común en Unix.
%
La filosofía del software libre rechaza una práctica empresarial
concreta y muy generalizada, pero no rechaza el negocio en general.
%
Cuando una empresa respeta la libertad de los usuarios, le deseamos
mucho éxito.
%
Una serie de empresas asociadas con el término "código abierto" basan su
mercado en el software no libre que funciona con software libre.
%
Las empresas que utilizan el término "código abierto" intentan
presentarse como empresas de "valor añadido". Si valoramos la libertad,
deberíamos hablar de productos de "libertad sustraída".
%
El principal objetivo de GNU era ser software libre.
%
Aun cuando GNU no entrañara ninguna ventaja técnica frente a Unix, sí
tendría una ventaja social, al permitir que los usuarios cooperaran, y
otra ética, al respetar su libertad.
%
Decidimos no dar soporte a las máquinas de 16 bits -estaba claro que las
de 32 bits serían la norma, para cuando hubiéramos terminado el sistema
GNU.
%
A medida que iba aumentaba la popularidad del proyecto GNU, la gente
empezó a donar ordenadores que operaban con Unix.
%
Unix era -y es- software propietario, y según la filosofía del proyecto
GNU no debíamos recurrir a él.
%
Aplicando la misma lógica que nos lleva a justificar el uso de la
violencia en legítima defensa, concluí que era igualmente legítimo
utilizar un paquete propietario cuando éste resultara crucial para
desarrollar un sustituto libre que ayudaría a otros a dejar de utilizar
el paquete propietario.
%
Hoy en día ya no tenemos ninguna copia de Unix, porque lo reemplazamos
por sistemas operativos libres.
%
Cuando no podíamos sustituir el sistema operativo de un ordenador por
otro libre, entonces reemplazábamos el ordenador entero.
%
Cualquier programa que despierte el interés de algo más que un reducido
grupo de usuarios se añadirá al sistema operativo GNU.
%
Unix contenía juegos, así que lógicamente GNU tenía que hacer lo propio.
Pero la compatibilidad nunca fue un problema para los juegos, de modo
que no replicamos los de Unix.
%
En GNU optamos en cambio por una gama de distintas clases de juegos que
pensamos podrán gustar a los usuarios.
%
La biblioteca C GNU utiliza un copyleft especial llamado GNU Library
General Public License, que autoriza el enlace de software propietario
con la biblioteca.
%
La biblioteca C desempeña tareas genéricas; todo sistema o compilador
propietario viene acompañado de una biblioteca C.
%
En el sistema GNU -incluido GNU/Linux-, la biblioteca C GNU es la única
en C.
%
No existen razones éticas para autorizar la incorporación de
aplicaciones propietarias en el sistema GNU, pero estratégicamente
parece que prohibir esto desincentivaría el uso del sistema GNU en lugar
de alentar el desarrollo de aplicaciones libres.
%
Los desarrolladores de software propietario cuentan con la ventaja que
proporciona el dinero; los de software libre deben idear ventajas entre
ellos.
%
Todo buen trabajo de software empieza cuando un desarrollador se plantea
un reto personal.
%
Muchos componentes esenciales del software GNU se desarrollaron con el
fin de crear un sistema operativo libre y completo.
%
El origen de GNU está en una visión y un plan, no en un impulso
individual.
%
Desarrollamos la biblioteca C GNU, la Bourne Again Shell (BASH) y el GNU
tar porque cualquier sistema similar a Unix precisaba de estos
componentes.
%
Algunos programas GNU se desarrollaron para enfrentarse a amenazas
específicas sobre nuestra libertad.
%
Desarrollamos el gzip, para sustituir al programa Compress cuando éste
dejó de estar a disposición de la comunidad gracias a las patentes LZW.
%
Estamos desarrollando el GNU Privacy Guard para reemplazar el popular
software de encriptación no libre, porque los usuarios no deberían verse
obligados a elegir entre su privacidad y su libertad.
%
Al iniciarse el proyecto GNU pensé que desarrollaríamos el sistema en su
totalidad y luego lo publicaríamos entero. Pero no fue así.
%
Dado que cada uno de los componentes del sistema GNU se implantó en un
sistema Unix, todos ellos podían ejecutarse en sistemas Unix mucho antes
de que existiera el sistema GNU.
%
Algunos de los programas GNU se hicieron muy populares y los usuarios
empezaron a ampliarlos y a portarlos -a las diversas versiones
incompatibles de Unix, y también a otros sistemas.
%
Los desarrolladores de GNU dedicaban la mayor parte de su tiempo al
mantenimiento de portes de programas GNU que a escribir los componentes
que faltaban.
%
En 1990, el sistema GNU estaba casi terminado. Faltaba crear un solo
componente central, el kernel.
%
Decidimos crear un kernel como una colección de procesos de servidor que
se ejecutaría sobre Mach. Mach es un microkernel desarrollado en la
Carnegie Mellon University y, más tarde, en la Universidad de Utah.
%
El GNU Hurd es una colección de servidores -o "manada de
gnus"-implantados en Mach que desempeñan las diversas tareas propias del
kernel de Unix.
%
El desarrollo de GNU Hurd se retrasó mientras esperábamos la publicación
de Mach como software libre, tal y como nos habían prometido.
%
Los servidores multiproceso que se envían mensajes entre sí resultan
extremadamente difíciles de depurar.
%
La consolidación del Hurd ha llevado muchísimos años.
%
En principio, el kernel GNU no iba a llamarse Hurd. Su nombre original
era Alix -por mi novia de aquel momento.
%
En 1991, Linus Torvalds desarrolló un kernel compatible con Unix y lo
llamó Linux.
%
En el año 1992, la combinación de Linux con el incompleto sistema GNU
resultó en un sistema operativo libre.
%
Gracias a Linux podemos ejecutar hoy una versión del sistema GNU.
%
Denominamos esta versión GNU/Linux para explicar su composición, una
combinación del sistema GNU con Linux como kernel.
%
Hemos demostrado ser capaces de desarrollar una amplia gama de software
libre.
%
Existen diversos retos que plantean un futuro incierto para el software
libre.
%
Necesitaremos la clase de determinación que exhibe la gente cuando
valora su libertad y la protege a toda costa.
%
Los fabricantes de hardware tienden cada vez más a mantener en secreto
las especificaciones del hardware.
%
Hoy contamos con sistemas libres y completos, pero no durarán mucho si
no son compatibles con los ordenadores del mañana.
%
Los programadores pueden hacer ingeniería inversa para descubrir cómo
crear programas compatibles con el hardware.
%
A medida que aumente el número de usuarios de software libre, el
secretismo de las especificaciones de hardware se convertirá en una
política contraproducente.
%
Hacer ingeniería inversa es una labor colosal.
%
La librería no libre que opera en un sistema operativo libre constituye
una trampa para los desarrolladores de software libre.
%
Las atractivas funciones de la biblioteca privativa constituyen el cebo
perfecto; al utilizar la biblioteca, caes en la trampa, porque tu
programa no puede integrarse de forma útil en un sistema operativo
libre.
%
Sólo en 1997 el LessTif, desarrollado por los Hungry Programmers, fue lo
suficientemente potente para la mayoría de las aplicaciones Motif.
%
Entre 1996 y 1998, otro toolkit no libre de Graphical User Interface
(GUI) llamado Qt se incorporó a una notable colección de software libre,
el escritorio KDE.
%
GNOME, el GNU Network Object Model Environment, es el proyecto de
escritorio de GNU.
%
GNOME pretendía proveer prestaciones similares, pero usando
exclusivamente software libre.
%
GNOME entraña algunas ventajas técnicas, como la de ser compatible con
varios lenguajes, y no sólo el C++. Pero su principal propósito era la
libertad, funcionar sin software no libre.
%
Harmony es una biblioteca sustitutiva compatible, diseñada con el fin de
ejecutar software KDE sin recurrir a Qt.
%
La amenaza más seria a la que nos enfrentamos procede de las patentes de
software, que pueden introducir algoritmos y funciones fuera del alcance
del software libre al menos durante veinte años.
%
Las patentes del algoritmo de compresión LZW se aplicaron en 1983, y
todavía no podemos publicar software libre que produzca GIFs
adecuadamente comprimidos.
%
En 1998, se suspendió la distribución de un programa libre para
reproducir archivos de audio MP3 comprimidos bajo amenaza de una demanda
judicial por patente.
%
A pesar de que resulta muy útil discutir la efectividad práctica del
modelo de desarrollo de tipo "catedral" y la fiabilidad y potencia de
ciertos programas de software libre, debemos ir más allá. Debemos hablar
de libertad y de principios.
